on revHookPostSaveStack pStack
   local tProjectFile,tStackFile
   put the effective fileName of pStack into tStackFile
   put ProjectForStackFile(tStackFile,false) into tProjectFile
  
   if tProjectFile is not empty then
      # appending uuid to ensure each process has a unique name so multiple saves
      # of the same stackfile rapidly always open a new process
      local tProcess
      put "lcvcs export -file "&q(tProjectFile)&" -stackfile "&q(tStackFile)&&uuid() into tProcess
      open process tProcess for neither
   end if
   pass revHookPostSaveStack
end revHookPostSaveStack

-- if a stack is cloned set all uuids
on newStack
   SetUUIDs the long id of the target,true
   pass newStack
end newStack

-- if a card or group is copied set all child uuids
on newCard
   SetUUIDs the long id of the target,true
   pass newCard
end newCard

-- check IDs are different before setting
on newGroup
   SetUUIDs the long id of the target,false
   pass newGroup
end newGroup

-- for all individual objects set uuids

on newField
   SetUUIDs the long id of the target,true
   pass newField
end newField

on newButton
   SetUUIDs the long id of the target,true
   pass newButton
end newButton

on newPlayer
   SetUUIDs the long id of the target,true
   pass newPlayer
end newPlayer

on newGraphic
   SetUUIDs the long id of the target,true
   pass newGraphic
end newGraphic

on newImage
   SetUUIDs the long id of the target,true
   pass newImage
end newImage

private command SetUUIDs pObject,pDontCheck
   local tVersion
   if pDontCheck or the uVersion["ID"] of pObject is not the short id of pObject then
      put the short id of pObject into tVersion["ID"]
      put UUID() into tVersion["UUID"]
      set the customProperties["uVersion"] of pObject to tVersion
   end if
   
   local tID,tSharedGroups
   switch word 1 of pObject
      case "stack"
         repeat for each line tID in the cardIDs of pObject
            SetUUIDs "card id "&tID&" of "&pObject,pDontCheck
         end repeat
         repeat for each line tID in the sharedGroupIDs of pObject
            SetUUIDs "bkgnd id "&tID&" of "&pObject,pDontCheck
         end repeat
         break
      case "card"
         put the sharedGroupIDs of pObject into tSharedGroups
         split tSharedGroups by row as set
      case "group"
      case "bkgnd"
         repeat for each line tID in the childControlIDs of pObject
            if not tSharedGroups[tID] then
               SetUUIDs the long id of ("control id "&tID&" of "&pObject),pDontCheck
            end if
         end repeat
         break
   end switch
end SetUUIDs

